SHELL := /bin/bash

HAVE_ALSA := y
HAVE_DVB := y
HAVE_ESOUND := y
HAVE_FIREWIRE := y
HAVE_OSS := y
HAVE_XFT := y
HAVE_VIDEO4LINUX := n
HAVE_VIDEO4LINUX2 := y

STATIC_LIBRARIES := y

OBJDIR := $(shell uname --machine)

GLOBAL_CONFIG := $(lastword $(wildcard ./global_config ../global_config ../../global_config))
TOPDIR := $(dir $(GLOBAL_CONFIG))
BINDIR := $(TOPDIR)/bin
PLUGIN_DIR := $(BINDIR)/plugins
# abs path
THIRDPARTY := $(shell cd $(TOPDIR)/thirdparty; pwd)

ifneq (,$(findstring HAVE_GL,$(shell cat $(GLOBAL_CONFIG))))
HAVE_GL := y
else
HAVE_GL := n
endif



ifeq ($(origin CFLAGS), environment)
HAVE_CFLAGS := y
else
HAVE_CFLAGS := n
endif


############################# C++ and C COMPILERS

############################# FINAL DESTINATION FOR INSTALLATION BINARIES

PREFIX = /usr/
LIBPREFIX = $(PREFIX)/lib


########################## THE COMPILER

CC = g++
GCC = gcc

ifneq ($(HAVE_CFLAGS), y)
CFLAGS = -O2 -g -fno-omit-frame-pointer
CFLAGS += -pthread -fno-math-errno -fno-signed-zeros
endif
CFLAGS += -Wall

ifeq ($(HAVE_GL), y)
CFLAGS += -DHAVE_GL
endif

ifeq ($(HAVE_XFT), y)
CFLAGS += -DHAVE_XFT
endif

ifeq ($(HAVE_ESOUND), y)
ESOUND_DIR := $(THIRDPARTY)/esound
AUDIOFILE_DIR := $(THIRDPARTY)/audiofile
ESOUNDCFLAGS = -DHAVE_ESOUND -I$(ESOUND_DIR) -I$(AUDIOFILE_DIR)
ESOUNDLIBS = $(ESOUND_DIR)/$(OBJDIR)/libesound.a
endif

#CFLAGS += -g
CFLAGS += -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64

# the directory for plugin includes
#FREETYPE_DIR := $(shell expr $(THIRDPARTY)/freetype-* )
FREETYPE_DIR := $(shell pkg-config --cflags freetype2 )
CFLAGS += $(FREETYPE_DIR) -I$(TOPDIR)
CFLAGS += -DHAVE_VIDEO4LINUX2

ifeq ($(HAVE_ALSA), y)
CFLAGS += $(ALSA_CFLAGS)
endif

ifeq ($(HAVE_OSS), y)
CFLAGS += -DHAVE_OSS
endif

ifeq ($(HAVE_DVB), y)
CFLAGS += -DHAVE_DVB
endif

ifeq ($(HAVE_FIREWIRE), y)
CFLAGS += -DHAVE_FIREWIRE
endif

ifeq ($(HAVE_VIDEO4LINUX), y)
CFLAGS += -DHAVE_VIDEO4LINUX
endif

ifeq ($(HAVE_VIDEO4LINUX2), y)
CFLAGS += -DHAVE_VIDEO4LINUX2
endif

ifeq ($(OBJDIR), alpha)
CXXREPOSITORY = cxx_repository/*.o
endif

$(shell mkdir -p $(OBJDIR) )

########################## LINKER

LFLAGS = 
LDLINKER = g++ -shared 


############### MAKEFILE MACROS

LOOP_BEGIN = @ for i in $(DIRS) ; \
	do \
	

LOOP_END = done

